.CodeMirror-focused,
.CodeMirror.dialog-opened {
	.CodeMirror-selected {
		background: Highlight;
	}

	.CodeMirror-selectedtext {
		color: HighlightText !important;
	}
}

.CodeMirror-lines * {
	cursor: text;
}

.CodeMirror-selectedtext {
	color: inherit;
}
.CodeMirror-selected {
	background: inherit;
}

.CodeMirror-vscrollbar {
	position: absolute;
}

.CodeMirror-sizer {
	margin-left: 0 !important;
	border-right-width: 0 !important;
}

.CodeMirror-simplescroll-horizontal,
.CodeMirror-simplescroll-vertical {
	background: var(--box-alt-background-color);
	div {
		background: var(--scroll-bar-thumb-background-color);
		border: none;
	}
}

/** The container for the CodeMirror element. */
.diff-code-mirror {
	flex-grow: 1;
	min-width: 0;
	overflow-y: auto;
}

.diff-code-mirror .CodeMirror {
	height: 100%;
	/* color: var(--diff-text-color); */
	/* background: var(--background-color); */
	@apply bg-card text-card-foreground;
	font-size: var(--font-size-sm);
	font-family: var(--font-family-monospace);

	span {
		word-break: break-all;
	}

	pre {
		border: none;
	}

	&-lines {
		padding: 0;
	}

	pre.CodeMirror-line,
	pre.CodeMirror-line-like {
		/* padding: 2px 0 2px 76px; */
		/* white-space: pre-line; */
		padding: 2px 2px 2px var(--spacing-half);
		white-space: pre-wrap;
		word-break: break-all;

		&.diff-hunk-expandable-both {
			padding-top: 14px;
			padding-bottom: 14px;
		}

		&.diff-hunk:not(.diff-hunk-expandable-both) {
			padding-top: 5px;
			padding-bottom: 5px;
		}

		svg.no-newline {
			height: 8px;
			fill: var(--error-color);
			display: inline-block;
			margin-left: 3px;
			margin-bottom: -1px;
		}
	}

	.CodeMirror-code {
		border-bottom: var(--base-border);
		> div {
			display: flex;
			flex-direction: row;
		}
	}

	.CodeMirror-gutters {
		background: transparent;
		border: none;
		display: none;
		/* position: absolute; */
	}

	.CodeMirror-gutter-wrapper {
		top: 0;
		bottom: 0;
		/* position: absolute; */
	}

	.CodeMirror-gutter-elt {
		height: 100%;
		width: 100% !important;
	}

	.diff-gutter {
		width: 125px;
	}

	.CodeMirror-search-dialog {
		left: auto;
		border: var(--base-border);
		border-top: 0;
		right: var(--spacing);
		border-radius: 0 0 var(--border-radius) var(--border-radius);
		padding: var(--spacing-half) var(--spacing);
		box-shadow: var(--base-box-shadow);

		.CodeMirror-search-label,
		.CodeMirror-search-hint {
			display: none;
		}

		input.CodeMirror-search-field {
			background: var(--box-background-color);
			color: var(--text-color);
			font-size: var(--font-size);
			font-family: var(--font-family-sans-serif);
			height: var(--text-field-height);
			padding: 0;
			width: 180px;
		}

		.buttons {
			display: inline-block;
		}
	}

	.popover-component.whitespace-hint {
		width: 225px;
	}
}

.CodeMirror-lines .diff-line-gutter {
	display: flex;
	height: 100%;
	/* background: var(--diff-gutter-background-color); */
	@apply bg-card;
	box-sizing: border-box;
	position: relative;
	cursor: default;

	* {
		cursor: default;
	}

	.hunk-handle {
		position: absolute;
		height: 100%;
		width: 20px;
		right: -8px;
		top: 0;
	}

	.hunk-expander {
		overflow: inherit;
		text-overflow: inherit;
		white-space: inherit;
		font-family: inherit;
		font-size: inherit;
		padding: inherit;
		border: none;
		height: inherit;
		color: inherit;
		background-color: inherit;

		position: absolute;
		right: 0;
		width: 100%;
		text-align: center;

		&.hunk-expand-up-handle {
			height: 50%;
			bottom: 0;
		}

		&.hunk-expand-down-handle {
			height: 50%;
			top: 0;
		}

		&.hunk-expand-whole-handle {
			height: 100%;
			bottom: 0;
		}
	}

	&:not(.includeable) {
		.hunk-handle {
			display: none;
		}
	}

	&.expandable-both,
	&:not(.diff-hunk) {
		.hunk-expand-whole-handle {
			display: none;
		}
	}

	&:not(.expandable-both),
	&:not(.diff-hunk) {
		.hunk-expand-up-handle,
		.hunk-expand-down-handle {
			display: none;
		}
	}

	&.diff-add {
		background: var(--diff-add-gutter-background-color);
	}

	&.diff-delete {
		background: var(--diff-delete-gutter-background-color);
	}

	&.diff-hunk {
		background: var(--diff-hunk-gutter-background-color);

		.hunk-expand-up-handle,
		.hunk-expand-down-handle,
		.hunk-expand-whole-handle {
			background: var(--diff-hunk-gutter-background-color);
		}

		.hunk-expand-icon {
			width: 100%;
			height: 100%;
			display: flex;
			align-items: center;
			justify-content: center;
		}

		&:not(.expandable-up) {
			.hunk-expand-whole-handle #hunk-expand-up-icon {
				display: none;
			}
		}

		&:not(.expandable-down) {
			.hunk-expand-whole-handle #hunk-expand-down-icon {
				display: none;
			}
		}

		&:not(.expandable-short) {
			.hunk-expand-whole-handle #hunk-expand-short-icon {
				display: none;
			}
		}

		&.expandable-up,
		&.expandable-down,
		&.expandable-short,
		&.expandable-both {
			:hover {
				cursor: pointer;

				background: var(--diff-hover-background-color);
				border-color: var(--diff-hover-border-color);
				color: var(--diff-hover-text-color);

				&:last-child {
					border-color: var(--diff-hover-gutter-color);
				}
			}
		}
	}

	.before {
		border-right: 1px solid var(--diff-border-color);
	}

	.after {
		border-right: 4px solid var(--diff-border-color);
	}

	.diff-line-number {
		width: 50%;
		padding: 0 var(--spacing-half);
	}

	&.diff-add,
	&.diff-delete {
		&:not(.read-only) * {
			cursor: pointer;
		}
	}

	&.read-only .after {
		border-right-width: 1px;
	}
}

.CodeMirror-linebackground {
	position: absolute;
	width: 100%;
	height: 100%;
	left: 0;
	top: 0;
	&.diff-add {
		background: var(--diff-add-background-color);
	}

	&.diff-delete {
		background: var(--diff-delete-background-color);
	}

	&.diff-context {
		/* background: var(--background-color); */
		@apply bg-card;
	}

	&.diff-hunk {
		background: var(--diff-hunk-background-color);
	}
}

.CodeMirror .diff-line-gutter.diff-add {
	color: var(--diff-add-text-color);

	.diff-line-number {
		border-color: var(--diff-add-border-color);

		&:last-child {
			border-color: var(--diff-add-gutter-color);
		}
	}
}

.CodeMirror .diff-line-gutter.diff-delete {
	color: var(--diff-delete-text-color);

	.diff-line-number {
		border-color: var(--diff-delete-border-color);

		&:last-child {
			border-color: var(--diff-delete-gutter-color);
		}
	}
}

.CodeMirror .diff-line-gutter.diff-context {
	color: var(--diff-text-color);

	.diff-line-number {
		border-color: var(--diff-border-color);

		&:last-child {
			border-color: var(--diff-gutter-color);
		}
	}
}

.CodeMirror-line {
	position: relative;
	&.diff-hunk {
		color: var(--diff-hunk-text-color);
	}
	&.diff-delete {
		color: var(--diff-delete-text-color);
	}
	&.diff-add {
		color: var(--diff-add-text-color);
	}
	&.diff-context {
		color: var(--diff-text-color);
	}
}

.CodeMirror .diff-line-gutter.diff-hunk {
	color: var(--diff-hunk-text-color);

	.diff-line-number {
		border-color: var(--diff-hunk-border-color);

		&:last-child {
			border-color: var(--diff-hunk-gutter-color);
		}
	}

	&.expandable-up:hover,
	&.expandable-down:hover,
	&.expandable-short:hover {
		cursor: pointer;

		background: var(--diff-hover-background-color);
		border-color: var(--diff-hover-border-color);
		color: var(--diff-hover-text-color);

		&:last-child {
			border-color: var(--diff-hover-gutter-color);
		}
	}
}

.CodeMirror .diff-line-gutter.diff-line-selected {
	.diff-line-number {
		background: var(--diff-selected-background-color);
		border-color: var(--diff-selected-border-color);
		color: var(--diff-selected-text-color);

		&:last-child {
			border-color: var(--diff-selected-gutter-color);
		}
	}
}

.CodeMirror .diff-line-gutter.diff-line-hover,
.CodeMirror .diff-line-gutter.includeable:hover {
	.diff-line-number {
		background: var(--diff-hover-background-color);
		border-color: var(--diff-hover-border-color);
		color: var(--diff-hover-text-color);

		&:last-child {
			border-color: var(--diff-hover-gutter-color);
		}
	}

	&:not(.diff-line-selected) {
		&.diff-add {
			.diff-line-number {
				background: var(--diff-add-hover-background-color);
				border-color: var(--diff-add-hover-border-color);
				color: var(--diff-add-hover-text-color);

				&:last-child {
					border-color: var(--diff-add-hover-gutter-color);
				}
			}
		}

		&.diff-delete {
			.diff-line-number {
				background: var(--diff-delete-hover-background-color);
				border-color: var(--diff-delete-hover-border-color);
				color: var(--diff-delete-hover-text-color);

				&:last-child {
					border-color: var(--diff-delete-hover-gutter-color);
				}
			}
		}
	}
}

.CodeMirror-vscrollbar,
.CodeMirror-hscrollbar {
	opacity: 0;
}

.CodeMirror:hover {
	.CodeMirror-vscrollbar,
	.CodeMirror-hscrollbar {
		opacity: 1;
	}
}

.CodeMirror-scrollbar-filler {
	background: transparent;
}
